apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'maven-publish'

group = 'com.canhub.cropper'

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.CanHub'
                artifactId = 'Android-Image-Cropper'
                version = rootProject.libVersion
            }
        }
    }
}

android {
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName rootProject.libVersion
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    lintOptions {
        abortOnError false
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$androidXAppCompatVersion"

    implementation "androidx.activity:activity-ktx:$androidXActivity"

    implementation "androidx.exifinterface:exifinterface:$androidXExifVersion"
    implementation "androidx.core:core-ktx:$androidXCoreKtxVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "androidx.test.ext:junit:$androidXJunitVersion"
    testImplementation "androidx.test:core:$androidXTestVersion"
    testImplementation "androidx.test:runner:$androidXTestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"

    testImplementation "androidx.fragment:fragment-testing:$androidXFragmentTestingVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
}
